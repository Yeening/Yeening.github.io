<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title><![CDATA[Useful functions in python machine learning with numpy]]></title>
    <url>%2F2019%2F09%2F14%2FUseful-functions-in-python-machine-learning-with-numpy%2F</url>
    <content type="text"><![CDATA[NumpyUsing NumPy arrays and functions is very helpful when you are dealing with machine learning problems with python because they perform mathmatical operations faster by allowing for vectorization and use optimized libraries. By using NumPy arrays instead of python list, you can greatly improve the speed of calculating. Initialize NumPy arrays123456789import numpy as np# Initial with rangesquare = np.array(range(4)).reshape(2,2)# Initial with arrayx = np.array([1,2,3],[4,5,6])a = [1,2,3]y = np.array(a)# Initial with zerosthetas = np.zeros(x[1].shape,dtype=float) Square and power NumPy array elements123456789import numpy as np# Squarearr1 = [1, -3, 15, -466] np.square(arr1) # [1,9,225,217156]# Powerx1 = range(6) # [0, 1, 2, 3, 4, 5]np.power(x1, 3) # array([ 0, 1, 8, 27, 64, 125])x2 = [1.0, 2.0, 3.0, 3.0, 2.0, 1.0]np.power(x1, x2) # array([ 0., 1., 8., 27., 16., 5.]) Sum of NumPy array elements12345678910111213141516import numpy as np# 1D array arr = [20, 2, .2, 10, 4] print("\nSum of arr : ", np.sum(arr)) # Sum of arr : 36.2print("Sum of arr(uint8) : ", np.sum(arr, dtype = np.uint8)) # Sum of arr(uint8) : 36print("Sum of arr(float32) : ", np.sum(arr, dtype = np.float32)) # Sum of arr(float32) : 36.2# 2D arrayarr = [[14, 17, 12, 33, 44], [15, 6, 27, 8, 19], [23, 2, 54, 1, 4,]]print("\nSum of arr : ", np.sum(arr)) print("Sum of arr(axis = 0) : ", np.sum(arr, axis = 0)) print("Sum of arr(axis = 1) : ", np.sum(arr, axis = 1)) # Sum of arr : 279# Sum of arr(axis = 0) : [52 25 93 42 67]# Sum of arr(axis = 1) : [120 75 84] Reshape Numpy Arrays1234567891011a = np.arange(6).reshape((3, 2))a# array([[0, 1],# [2, 3],# [4, 5]])# You can also use -1 as parameter to make the dimention automatically adapt to other dimensions and the number of elements.a.reshape(3,-1) # the unspecified value is inferred to be 2array([[1, 2], [3, 4], [5, 6]]) Random Shuffle of NumPy arrays1234random.shufflearr = np.arange(10)np.random.shuffle(arr)arr # [1 7 5 2 9 4 3 6 0 8] For multi-dimensional arrays, numpy.random.shuffle will only shuffle the first dimension. 123456arr = np.arange(9).reshape((3, 3))np.random.shuffle(arr)arr# array([[3, 4, 5],# [6, 7, 8],# [0, 1, 2]]) Concatenate NmuPy Arrays123456789a = np.array([[1, 2], [3, 4]])b = np.array([[5, 6]])np.concatenate((a, b), axis=0)# array([[1, 2],# [3, 4],# [5, 6]])np.concatenate((a, b.T), axis=1)# array([[1, 2, 5],# [3, 4, 6]]) Numpy Linear AlgebraInner Product and Transpose of NumPy arrays12345678import numpy as npx, y = load_data_set(filename)print(x.shape, x.T.shape) #(200, 2) (2, 200)np.dot(x.T,x).shape #(2, 2)# Another methodx.T.dot(x),shape #(2, 2)square = np.array(range(4)).reshape(2,2)np.dot(square, square, square) #also accept more than two parameters Caution with the dtype of the arrays that you want to make dot. you can transfer it to float in linear regression: 1np.array(x,dtype=float), np.array(y,dtype=float) np.dot vs. a.dot(b) 123np.dot(inv_xTx,x.T).dot(y) #It worksnp.dot(inv_xTx,x.T,y) #ValueError: output array is not acceptable (must have the right datatype, number of dimensions, and be a C-Array) Inverse Numpynp.linalg.inv(*target_matrix*) 1234567891011import numpy as nps = np.array([ [2,3], [1,4]])print(np.linalg.inv(s))# [[ 0.8 -0.6]# [-0.2 0.4]]print(np.dot(np.linalg.inv(s),s))# [[1. 0.]# [0. 1.]] Python randomUseful with random sampling. 123import random print (random.choice([1, 4, 8, 10, 3])) # A random number from listrandom.randrange(20, 50, 3) # A random number from range(20,50), with the gap of 3]]></content>
      <categories>
        <category>engineer</category>
      </categories>
      <tags>
        <tag>Technology</tag>
        <tag>Machine Learning</tag>
        <tag>Python</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Solve hexo view count error: Busuanzi counting view icon doesn't show]]></title>
    <url>%2F2019%2F08%2F26%2FSolve-hexo-view-count-error-Busuanzi-counting-view-icon-doesn-t-show%2F</url>
    <content type="text"><![CDATA[ProblemCheck the next guide and hexo documentationCheck the html source codeCheck Xiaoyu’s html source codefind the version differenceTry with next 6.6.0, make back upChange the config fileSolved]]></content>
      <tags>
        <tag>Error Solving</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Solved Hexo deploy error: fatal: in unpopulated submodule '.deploy_git']]></title>
    <url>%2F2019%2F08%2F26%2FSolved-Hexo-deploy-error-fatal-in-unpopulated-submodule-deploy-git%2F</url>
    <content type="text"><![CDATA[I encountered an error that says: “fatal: in unpopulated submodule ‘.deploy_git”, when I try to deploy my hexo blog with my new computer. Solved it with this steps(under the blog folder: Yeening.github,io): 123rm -rf .deploy_githexo ghexo d The above commands delete the .deploy_git file and regenerate it with hexo g, then deploy it. This provides us a strategy to solve similar errors: Delete and regenerate file that cause error. However, you need to make sure that the file is regeneratable and you have made a backup for the file you want to delete (syncing the bolg folder with github is a good way) !]]></content>
      <categories>
        <category>engineer</category>
      </categories>
      <tags>
        <tag>Blog</tag>
        <tag>Technology</tag>
        <tag>Error Solving</tag>
        <tag>Hexo</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[开始学嘻哈——嘻哈笔记1]]></title>
    <url>%2F2019%2F07%2F10%2F%E5%98%BB%E5%93%88%E7%AC%94%E8%AE%B01%2F</url>
    <content type="text"><![CDATA[今天学习了道野的9分钟快速说唱教学，为了防止熊瞎子掰苞米，所以将视频的内容整理为文字版，供自己复习 八拍 BPM：每分钟节拍数的单位，中文名为拍子数，不同的伴奏有不同的拍子数，拍子数越多，伴奏越快 基本Flow 白开水flow：每半拍一个字 xx/xx/ (均匀) （代表：3BangZ “交出你的微信或者交出你的性命……”） 二连音 停顿二连音： (xx/ /xx/ /xx/ /xx/) *n 普通二连音：一拍吐两个字，半拍吐一个字 = 白开水flow 快二连音：一个半拍两个字 三连音 慢三连音：在一拍里均匀吐出三个字： xxx/xxx/xxx 快三连音：在半拍里吐出三个字：xxx xxx/xxx xxx 字数调整、停顿、字音拖长字数填不满拍子怎么办？两个方法： 停顿 可以空着，也可以配合Ad-libs (啥是Ad-libs？就是yeah, ay, uh, brrr 这些) 字音拖长 xx~xxxxx 字多了怎么办？ 用更快的flow 分两句唱 删了hh 如何把Flow写得多变 把一句分成两个或者几个部分，每个部分用不一样的Flow 句子不被八拍框死，不让所有句子结束的点总在第四拍或者第八拍上]]></content>
      <categories>
        <category>music</category>
      </categories>
      <tags>
        <tag>Life</tag>
        <tag>Music</tag>
        <tag>Hip-hop</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[How to build a blog/personal site with github and hexo]]></title>
    <url>%2F2019%2F06%2F07%2FHow-to-build-your-personal-blog-with-github-page-and-hexo%2F</url>
    <content type="text"><![CDATA[Why Blog?Simply speaking, recording your valuable thinking in the form of a blog brings many benefits without any obvious disadvantages. Because: You can know many like-minded people with you when you read and discuss each other’s blogs. Writing is for better thinking. Teaching is the best way of leaning. If you cannot make a clear statement, you probably don’t fully understand it. — WeiPeng’s Blog Create a repository on githubCreate a repository on your github, caution: you must create a repository named: ​ YourUserName.github.io If you don’t know how to create a repository, follow this: Create a repo. Build your environmentThere are only tiny differences on the steps for windows and MacOS, I’ll introduce both. Just go with me! Install git For Windows users: download the suitable version Git for Windows Setup with your computer from the official site: Git - Downloading Package. Install Git with the setup package, For MacOS users, just run 1git --version to check or automatically install Git if it doesn’t exist on your Mac. Test the Git installation with git command in cmd. Connect github with ssh: open cmd with as an administrator. set the user.name and user.email. 12git config --global user.name YourGithubUserNamegit config --global user.email YourGithubEmail generate the ssh key file. 1ssh-keygen -t rsa -C YourGithubEmail press the Enter for three times. Copy the SSH key For windows users: find the generated id_rsa.pub file, copy the whole content. Or use command line like Mac users. For Mac users: pbcopy &lt; ~/.ssh/id_rsa.pub in Terminal. Open GitHub_Settings_keys, choose New SSH key, paste the key in the Key blank, fill in the Title blank with anything, choose Add SSH key. test the linage in cmd 1ssh git@github.com If you see the welcome message, eg: 12Hi XXX! You&apos;ve successfully authenticated, but GitHub does not provide shell access.Connection to github.com closed. Congratulations! You have successfully set your Git, you can manage your github repositories with Git on your computer. Install Node.js For Windows: Download Node.js at the offical website: Download | Node.js For Mac: Download install package at official website; or just use: 1brew install node in Terminal. After installation, use node -v in cmd to check node.js. use npm -v in cmd to check npm (installed with node.js) Install HexoHexo is: A fast, simple &amp; powerful blog framework, powered by Node.js. We can easily create and manage our blog with hexo. Make a folder (eg. MyBlog), cd to it in cmd Install hexo with npm 1sudo npm install hexo-cli -g Initialize the blog Set up your blog 12hexo init blogcd blog Generate static files 1hexo g Start the server (run the blog with local server, usually for test) 1hexo s Visit localhost:4000 (the ip address shown in the return message in cmd), we can see the initial form of a hexo bolg. Deploy the blogWe are now running the blog at local server, in the next step, we are going to deploy it to github, so that your blog can be visited anywhere with Internet access. Firstly, we need to know about the site configuration file: _config.yml (under the root folder of blog), we can config the characteristics of our blog by modifying this file. Open site configuration file, find ‘deploy’, modify the deploy block to: 1234deploy: type: git repo: https://github.com/YourUserName/YourUserName.github.io.git branch: master Save site configuration file. Install Git-deployer plugin: 1npm install hexo-deployer-git --save Clean, generate and deploy the blog Remind the following commands, you need to use them (or replace hexo d with hexo s for local test) every time you make changes to your blog: 123hexo cleanhexo ghexo d hexo d is the deploy command in hexo If everything goes correctly, you can now access your blog on Internet at: YourUserName.github.io Choose a themeThere are hundreds of themes for hexo, you can access them at: https://hexo.io/themes/. Next is a popular blog theme because its simply yet elegant UI, I will take this theme as example. Open the Command Prompt at the root folder of blog (the folder which includes /source and /theme, etc.) Clone the theme to the folder: /themes/themename: 1git clone https://github.com/theme-next/hexo-theme-next themes/next Open the site configuration file: _config.yml,change the value of theme to next (the name of theme) 1theme: next Clean, generate and deploy the blog 123hexo cleanhexo ghexo d For more settings with the theme next, refer to its repository: https://github.com/theme-next/hexo-theme-next , or its documentation: https://theme-next.org/docs/, if you are a beginner, it’s good to start with next because of its detailed users’ guide Write a post You can create a new post with this command: 1hexo new &quot;My post title&quot; or: 1hexo n &quot;My post title&quot; Hexo will generate a markdown file named: My post title.md under path: /source/_posts, you can easily write and edit your post by editing this file. If you don’t know what is or how to write markdown, you can learn from here: https://www.markdownguide.org/getting-started You can create a new page with this command: 1hexo new page &quot;About&quot; Bind a domain name (Optional)It is okey to leave your blog adress as YourUserName.github.io, and it’s cool to own your personalized domain name, if you want to bind your blog with your own domain name, follow the following steps: Get a domain namePersonally, I buy my domain name at ALi Cloud, but it’s up to you. Set up the domain nameThe steps of setting a domain name varies with your domain name and its provider, so I will skip the detail, you can follow the official guide from github: https://help.github.com/en/articles/quick-start-setting-up-a-custom-domain Create a CNAME fileCreate a file named CNMAE under folder /source, type in your domain name, you can type in your domain name without www, so that your site can be visited via a domain name either include www or not. Sync hexo blogs among different computers (From Xiaoyu Liu)I found a good way to sync your blog among different computers on Here : Thanks to Xiaoyu Liu!]]></content>
      <categories>
        <category>engineer</category>
      </categories>
      <tags>
        <tag>Blog</tag>
        <tag>Life</tag>
        <tag>Technology</tag>
      </tags>
  </entry>
</search>
